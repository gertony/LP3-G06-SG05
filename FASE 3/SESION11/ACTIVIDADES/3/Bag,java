public class Bag <T> {
  private T [] list;
  private int count; 
  public Bag(int n){
this.list = (T[])new Object[n];
this.count = 0;

}
 public void add(T obj) throws IsFull {
  if (count == list.length) {
    throw new IsFull();
  }

  list[count++] = obj;
}

public T[] getObjects() throws IsEmpty {
  if (count == 0) {
    throw new IsEmpty();
  }

  T[] objects = new T[count];
  System.arraycopy(list, 0, objects, 0, count);
  return objects;
}

public T remove(T obj) throws ObjectNoExist {
  int index = getIndex(obj);
  if (index == -1) {
    throw new ObjectNoExist();
  }

  T objRemoved = list[index];
  for (int i = index; i < count - 1; i++) {
    list[i] = list[i + 1];
  }
  list[count - 1] = null;
  count--;

  return objRemoved;
}

public int getIndex(T obj) {
  for (int i = 0; i < count; i++) {
    if (list[i].equals(obj)) {
      return i;
    }
  }

  return -1;
}

public String toString() {
  StringBuilder sb = new StringBuilder();
  for (T obj : list) {
    if (obj != null) {
      sb.append(obj).append(" ");
    }
  }
  return sb.toString();
}


}
